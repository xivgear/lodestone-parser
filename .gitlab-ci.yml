image: golang:1.17

variables:
  REPO_NAME: gitlab.com/xivgear/lodestone-parser

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME

stages:
  - test
  - build

go-fmt:
  stage: test
  needs: []
  script:
    - test -z "$(go fmt $(go list ./... | grep -v /vendor/))"

go-vet:
  stage: test
  needs: []
  script:
    - go vet $(go list ./... | grep -v /vendor/)

go-test:
  stage: test
  needs: []
  script:
    - go test -race $(go list ./... | grep -v /vendor/)

go-build:
  stage: build
  needs: []
  script:
    - go build -race -ldflags "-extldflags '-static'" -o $CI_PROJECT_DIR/lodestoneParserBin
